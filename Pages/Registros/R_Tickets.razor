@page "/RegistroTickets"
@inject TicketsBLL ticketsBLL 

<EditForm Model="tickets" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h1>Registro de tickets</h1>
        </div>
        <div class="card-body">
            <label> ID: </label>
            <div class="input-group">
                <div class="col-md-2" >
                    <InputNumber @bind-Value="tickets.TicketId" class="form-control"> </InputNumber>
                </div>

                <button type="button" class="btn btn-outline-primary oi oi-magnifying-glass" @onclick="Buscar">    </button>                
            </div>
            
            <div class="col-2">
                <label>Fecha</label>
                <InputDate @bind-Value="tickets.Fecha" class="form-control"> </InputDate>
                <ValidationMessage For="@(()=> tickets.Fecha)"></ValidationMessage>

            </div>


            <div class="row">
                <div class="col-3">
                    <label>ClienteId</label>
                    <InputNumber @bind-Value="tickets.ClienteId" class="form-control"> </InputNumber>
                    <ValidationMessage For="@(()=> tickets.ClienteId)"></ValidationMessage>
                </div>
                <div class="col-3">
                    <label>SistemaId</label>
                    <InputNumber @bind-Value="tickets.SistemaId" class="form-control"> </InputNumber>
                    <ValidationMessage For="@(()=> tickets.SistemaId)"></ValidationMessage>
                </div>
                
                <div class="col-3">
                    <label>PrioridadId</label>
                    <InputNumber @bind-Value="tickets.PrioridadId" class="form-control"> </InputNumber>
                    <ValidationMessage For="@(()=> tickets.PrioridadId)"></ValidationMessage>
                </div>
            </div>
            <br>                

                <div class="mb-3">
                    <label>SolicitadoPor</label>
                    <InputTextArea @bind-Value="tickets.SolicitadoPor" class="form-control"> </InputTextArea>
                    <ValidationMessage For="@(()=> tickets.SolicitadoPor)"></ValidationMessage>
                </div>                
            
                <br>
            <div class="mb-3">
                <label>Asunto</label>
                <InputTextArea @bind-Value="tickets.Asunto" class="form-control"> </InputTextArea>
                <ValidationMessage For="@(()=> tickets.Asunto)"></ValidationMessage>

                 <br>
                <div class="mb-3">
                    <label>Desciopci&oacute;n</label>
                    <InputTextArea @bind-Value="tickets.Descripcion" class="form-control"> </InputTextArea>
                    <ValidationMessage For="@(()=> tickets.Descripcion)"></ValidationMessage>
                </div>

            </div>

        </div>  
            <div class="card-footer">

                <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo<i class="oi oi-file"/></button>
                <button type="button" class="btn btn-outline-success">Guardar<i class="oi oi-document"/></button>
                <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar<i class="oi oi-trash"/></button>
            </div> 
    </div> 
</EditForm>

@code {
    [Parameter]
    public int TicketId { get; set; }
    public Tickets tickets = new Tickets();

        protected override void OnInitialized()
        {
            if(TicketId > 0){
                tickets.TicketId = TicketId;
                Buscar();
            }
            
        }

        public void Buscar(){
            var ticketsEncontrados = ticketsBLL.Buscar(tickets.TicketId);

            if(ticketsEncontrados != null){
                this.tickets = ticketsEncontrados;
            }
        } 

        public void Nuevo(){
            this.tickets = new Tickets();
        }

        public bool Validar(){
            
            if(tickets.ClienteId<0){
                return false;
            }
            if(tickets.SistemaId<0){
                return false;
            }
            if(tickets.PrioridadId<0){
                return false;
            }
            if(string.IsNullOrEmpty(tickets.SolicitadoPor)){
                return false;
            }
            if(string.IsNullOrEmpty(tickets.Asunto)){
                return false;
            }    
             if(string.IsNullOrEmpty(tickets.Descripcion)){
                return false;
            }    
            else{ 
                return true;
            }

        }
        
        public void Guardar(){
            if(Validar()){
                if(ticketsBLL.Guardar(this.tickets)){
                  Nuevo();
                }
            }
            
        }

        public void Eliminar(){
            if(Validar()){
                if(ticketsBLL.Eliminar(this.tickets)){
                    Nuevo();
                }
            }
            
        }
}

